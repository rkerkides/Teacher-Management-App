@startuml

class TeachingRequirement {
    - id: int
    - subject: String
    - numberOfTeachersNeeded: int
    - qualificationsRequired: String[]
    - courseNames: String[]
}

class Teacher {
    - id: int
    - name: String
    - availabilities: String[]
    - qualifications: String[]
    - experience: String
    - canTeach: List<Subject>
}

class FileDatabase {
    - teachers: Teacher[]
    + addTeacher(teacher: Teacher): void
    + updateTeacher(teacher: Teacher): void
    + deleteTeacher(teacherId: int): void
    + getTeacher(teacherId: int): Teacher
}

class MatchingSystem {
    + retrieveRequirements(semester: String): TeachingRequirement[]
    + retrieveTeacherInfo(): Teacher[]
    + matchTeachersWithRequirements(teachingRequirements: TeachingRequirement[], teachers: Teacher[]): Match[]
}

class Administrator {
    + displayAllTeachingRequirements(semester: String): void
    + inputTeacher(teacher: Teacher): void
    + inputTeachingRequirement(requirement: TeachingRequirement): void
    + matchCoursesToTeachers(): void
}

class SchedulingSystem {
    + presentAvailableSlots(): Slot[]
    + confirmSchedule(trainingSessions: TrainingSession[]): void
}

class SystemInterface {
    + inputTeachingRequirements(): void
    + viewTeachingRequirements(): void
    + maintainTeacherDatabase(): void
}

class System {
    - teachingRequirements: TeachingRequirement[]
    - teachers: Teacher[]
    + saveData(): void
    + loadData(): void
}

TeachingRequirement "1" *-- "1" System : contains >
Teacher "1" *-- "1" System : contains >
Teacher "1" -- "1" FileDatabase : stored in >
SystemInterface "1" -- "1" System : uses >
MatchingSystem "1" -- "1" System : uses >
SchedulingSystem "1" -- "1" System : uses >
Administrator "1" -- "1" System : uses >
FileDatabase "1" -- "1" System : uses >

@enduml
